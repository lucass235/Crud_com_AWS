import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import CardMaterial from "@/components/material/CardMaterial";
import { useState, useEffect } from "react";
import { Button, Grid } from "@mui/material";
import LinearLoader from "@/components/material/LinearLoader";
import { useRouter } from "next/router";
import Client from "@/model/Client";
import { getApiUrl } from "@/services/requests";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const router = useRouter();
  const [loanding, setLoading] = useState<boolean>(true);
  const [dataUsers, setDataUsers] = useState<Client[]>([]);
    const [pdfShow, setPdfShow] = useState<boolean>(false);
    
  // pegar valores de uma api
    useEffect(() => {
        setLoading(true);

        getApiUrl().then((response) => {
        setDataUsers(response);
        setLoading(false);
        });
        // async function fetchData() {
        //   try {
        //     const users: any = await getUser();
        //     setDataUsers(users);
        //   } catch (error) {
        //     console.error("Error fetching data: ", error);
        //   } finally {
        //     setLoading(false);
        //   }
        // }

        // fetchData();

    }, []);

    // console.log(dataUsers);
    if (loanding) return <LinearLoader />;

    return (
        <>
        <Head>
            <title>Usu√°rios</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className={`${styles.main} ${inter.className}`}>
            <div style={{ textAlign: "center" }}>
            <h1 style={{ color: "white", fontWeight: "bold", marginBottom: "50px", marginTop: "10px"}} >
                Clientes
            </h1>
            <Grid
                container
                spacing={{ xs: 2, md: 3 }}
                columns={{ xs: 4, sm: 8, md: 12 }}
            >
                {dataUsers.map((client: Client) => (
                    <Grid item key={client.id} md={6}>
                        <CardMaterial client={client} />
                    </Grid>
                ))}
            </Grid>
            <Button
                variant="contained"
                onClick={() => {
                setPdfShow(!pdfShow);
                router.push(
                    `/PdfPage?userName=${dataUsers[0].userName}&email=${dataUsers[0].email}&age=${dataUsers[0].age}`
                );
                }}
            >
                {pdfShow ? "Fechar PDF" : "Abrir PDF"}
            </Button>
            </div>
        </main>
        </>
    );
}
